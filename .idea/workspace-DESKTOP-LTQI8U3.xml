<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="b281ea6f-b71b-471a-b330-f7c32d3cc4b2" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/ivy_tests/test_array_api" beforeDir="false" afterPath="$PROJECT_DIR$/ivy_tests/test_array_api" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ivy_tests/test_array_api/array_api_tests/_array_module.py" beforeDir="false" afterPath="$PROJECT_DIR$/ivy_tests/test_array_api/array_api_tests/_array_module.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Agw3Jgch1YlmfXf9rrCQMPFPwo" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/sophi/Documents/OneDrive/Ivy_Docs/ivy/ivy_tests/test_ivy/helpers.py&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
  }
}</component>
  <component name="RunManager" selected="Python tests.pytest for test_random.test_random_uniform">
    <configuration name="data_type" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ivy/functional/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ivy/functional/ivy/data_type.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="helpers" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ivy_tests/test_ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ivy_tests/test_ivy/helpers.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="norms" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ivy/functional/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ivy/functional/ivy/norms.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="random" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ivy/functional/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ivy/functional/ivy/random.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="test_random" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ivy_tests/test_ivy/test_functional/test_core" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ivy_tests/test_ivy/test_functional/test_core/test_random.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_creation.test_from_dlpack" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_creation.test_from_dlpack&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_creation.test_ones_like" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_creation.test_ones_like&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_dtype.test_is_float_dtype" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_dtype.test_is_float_dtype&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_elementwise.test_negative" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_elementwise.test_negative&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_general.test_copy_array" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_general.test_copy_array&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_image.test_stack_images" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_image.test_stack_images&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_constant_pad" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_constant_pad&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_repeat" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027tensorflow\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_repeat&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_reshape" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_reshape&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_roll" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_roll&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_squeeze" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_squeeze&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_stack" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_stack&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_swapaxes" type="tests" factoryName="py.test">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_swapaxes&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_tile" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_tile&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_manipulation.test_zero_pad" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;--backend\u003d\u0027torch\u0027&quot;" />
      <option name="_new_target" value="&quot;test_manipulation.test_zero_pad&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_random.test_multinomial" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_random.test_multinomial&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_random.test_random_normal" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_random.test_random_normal&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_random.test_random_uniform" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_random.test_random_uniform&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_random.test_seed" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_random.test_seed&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_random.test_shuffle" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_random.test_shuffle&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Dockerfile" />
      <item itemvalue="Docker.DockerfileCopsim" />
      <item itemvalue="Docker.DockerfileGPU" />
      <item itemvalue="Python.helpers" />
      <item itemvalue="Python.test_random" />
      <item itemvalue="Python.random" />
      <item itemvalue="Python.data_type" />
      <item itemvalue="Python.norms" />
      <item itemvalue="Python tests.pytest for all (jax)" />
      <item itemvalue="Python tests.pytest for all (mxnet)" />
      <item itemvalue="Python tests.pytest for all (numpy)" />
      <item itemvalue="Python tests.pytest for all (tensorflow)" />
      <item itemvalue="Python tests.pytest for all (torch)" />
      <item itemvalue="Python tests.pytest for array API (jax)" />
      <item itemvalue="Python tests.pytest for array API (mxnet)" />
      <item itemvalue="Python tests.pytest for array API (numpy)" />
      <item itemvalue="Python tests.pytest for array API (tensorflow)" />
      <item itemvalue="Python tests.pytest for array API (torch)" />
      <item itemvalue="Python tests.pytest for core (jax)" />
      <item itemvalue="Python tests.pytest for core (mxnet)" />
      <item itemvalue="Python tests.pytest for core (numpy)" />
      <item itemvalue="Python tests.pytest for core (tensorflow)" />
      <item itemvalue="Python tests.pytest for core (torch)" />
      <item itemvalue="Python tests.pytest for frontends (jax)" />
      <item itemvalue="Python tests.pytest for frontends (mxnet)" />
      <item itemvalue="Python tests.pytest for frontends (numpy)" />
      <item itemvalue="Python tests.pytest for frontends (tensorflow)" />
      <item itemvalue="Python tests.pytest for frontends (torch)" />
      <item itemvalue="Python tests.pytest for nn (jax)" />
      <item itemvalue="Python tests.pytest for nn (mxnet)" />
      <item itemvalue="Python tests.pytest for nn (numpy)" />
      <item itemvalue="Python tests.pytest for nn (tensorflow)" />
      <item itemvalue="Python tests.pytest for nn (torch)" />
      <item itemvalue="Python tests.pytest for stateful (jax)" />
      <item itemvalue="Python tests.pytest for stateful (mxnet)" />
      <item itemvalue="Python tests.pytest for stateful (numpy)" />
      <item itemvalue="Python tests.pytest for stateful (tensorflow)" />
      <item itemvalue="Python tests.pytest for stateful (torch)" />
      <item itemvalue="Python tests.pytest for creation" />
      <item itemvalue="Python tests.pytest for data type" />
      <item itemvalue="Python tests.pytest for manipulation" />
      <item itemvalue="Python tests.pytest for searching" />
      <item itemvalue="Python tests.pytest for set" />
      <item itemvalue="Python tests.pytest for sorting" />
      <item itemvalue="Python tests.pytest for statistical" />
      <item itemvalue="Python tests.pytest for utiliy" />
      <item itemvalue="Python tests.pytest for device" />
      <item itemvalue="Python tests.pytest for elementwise" />
      <item itemvalue="Python tests.pytest for general" />
      <item itemvalue="Python tests.pytest for gradients" />
      <item itemvalue="Python tests.pytest for linalg" />
      <item itemvalue="Python tests.pytest for meta" />
      <item itemvalue="Python tests.pytest for nest" />
      <item itemvalue="Python tests.pytest for random" />
      <item itemvalue="Python tests.pytest for functional activations" />
      <item itemvalue="Python tests.pytest for functional layers" />
      <item itemvalue="Python tests.pytest for functional losses" />
      <item itemvalue="Python tests.pytest for functional norms" />
      <item itemvalue="Python tests.pytest for stateful activations" />
      <item itemvalue="Python tests.pytest for stateful api" />
      <item itemvalue="Python tests.pytest for stateful converters" />
      <item itemvalue="Python tests.pytest for stateful distributed" />
      <item itemvalue="Python tests.pytest for stateful layers" />
      <item itemvalue="Python tests.pytest for stateful modules" />
      <item itemvalue="Python tests.pytest for stateful norms" />
      <item itemvalue="Python tests.pytest for stateful optimizers" />
      <item itemvalue="Python tests.pytest for training" />
      <item itemvalue="Python tests.pytest for training layers" />
      <item itemvalue="Python tests.pytest for training norms" />
      <item itemvalue="Python tests.pytest for training on call build" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_constant_pad" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_swapaxes" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_tile" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_zero_pad" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_repeat" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_reshape" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_roll" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_squeeze" />
      <item itemvalue="Python tests.pytest for test_manipulation.test_stack" />
      <item itemvalue="Python tests.pytest for test_image.test_stack_images" />
      <item itemvalue="Python tests.pytest for test_general.test_copy_array" />
      <item itemvalue="Python tests.pytest for test_dtype.test_is_float_dtype" />
      <item itemvalue="Python tests.pytest for test_creation.test_ones_like" />
      <item itemvalue="Python tests.pytest for test_creation.test_from_dlpack" />
      <item itemvalue="Python tests.pytest for test_elementwise.test_negative" />
      <item itemvalue="Python tests.pytest for all" />
      <item itemvalue="Python tests.pytest for array API" />
      <item itemvalue="Python tests.pytest for container" />
      <item itemvalue="Python tests.pytest for demos" />
      <item itemvalue="Python tests.pytest for functioanl nn" />
      <item itemvalue="Python tests.pytest for functional core" />
      <item itemvalue="Python tests.pytest for functional frontends" />
      <item itemvalue="Python tests.pytest for graph compilation" />
      <item itemvalue="Python tests.pytest for stateful" />
      <item itemvalue="Python tests.pytest for test_random.test_random_normal" />
      <item itemvalue="Python tests.pytest for test_random.test_multinomial" />
      <item itemvalue="Python tests.pytest for test_random.test_random_uniform" />
      <item itemvalue="Python tests.pytest for test_random.test_seed" />
      <item itemvalue="Python tests.pytest for test_random.test_shuffle" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for test_random.test_random_uniform" />
        <item itemvalue="Python tests.pytest for test_random.test_random_normal" />
        <item itemvalue="Python tests.pytest for test_random.test_multinomial" />
        <item itemvalue="Python tests.pytest for test_random.test_shuffle" />
        <item itemvalue="Python tests.pytest for test_random.test_seed" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b281ea6f-b71b-471a-b330-f7c32d3cc4b2" name="Changes" comment="" />
      <created>1655444342430</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1655444342430</updated>
      <workItem from="1655444345685" duration="1226000" />
      <workItem from="1655445609299" duration="8236000" />
      <workItem from="1655701677276" duration="15828000" />
      <workItem from="1655769485340" duration="2394000" />
      <workItem from="1655866003536" duration="657000" />
      <workItem from="1656049259524" duration="5836000" />
      <workItem from="1656057189786" duration="220000" />
      <workItem from="1656302491658" duration="4550000" />
      <workItem from="1656392846919" duration="1483000" />
      <workItem from="1656395458798" duration="59000" />
      <workItem from="1656395922152" duration="11170000" />
      <workItem from="1656652274580" duration="10000" />
      <workItem from="1656652782794" duration="4459000" />
      <workItem from="1656894498598" duration="1223000" />
      <workItem from="1656918968541" duration="13206000" />
      <workItem from="1656999819348" duration="16918000" />
      <workItem from="1657035566644" duration="6499000" />
      <workItem from="1657258088773" duration="30407000" />
      <workItem from="1657502648289" duration="39170000" />
      <workItem from="1657871248645" duration="583000" />
      <workItem from="1658061236951" duration="11897000" />
      <workItem from="1658101187860" duration="21838000" />
      <workItem from="1658123228049" duration="4598000" />
      <workItem from="1658129144226" duration="22873000" />
      <workItem from="1658222516535" duration="843000" />
      <workItem from="1658223654837" duration="16067000" />
      <workItem from="1658239849581" duration="478000" />
      <workItem from="1658280460169" duration="6973000" />
      <workItem from="1658729834488" duration="6000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ivy_tests/test_ivy/test_functional/test_core/test_elementwise.py</url>
          <line>388</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ivy/functional/ivy/random.py</url>
          <line>3</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ivy_tests/test_ivy/test_functional/test_nn/test_norms.py</url>
          <line>3</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ivy_tests/test_ivy/helpers.py</url>
          <line>1600</line>
          <option name="timeStamp" value="158" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ivy$helpers.coverage" NAME="helpers Coverage Results" MODIFIED="1658130864442" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy_tests/test_ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_match_kwargs.coverage" NAME="pytest for test_general.test_match_kwargs Coverage Results" MODIFIED="1656303259662" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_use_within_use_framework.coverage" NAME="pytest for test_general.test_use_within_use_framework Coverage Results" MODIFIED="1656303165460" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_log1p.coverage" NAME="pytest for test_elementwise.test_log1p Coverage Results" MODIFIED="1655714018847" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_dtype_test_broadcast_to.coverage" NAME="pytest for test_dtype.test_broadcast_to Coverage Results" MODIFIED="1656397081704" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_log2.coverage" NAME="pytest for test_elementwise.test_log2 Coverage Results" MODIFIED="1655713984608" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_creation_test_from_dlpack.coverage" NAME="pytest for test_creation.test_from_dlpack Coverage Results" MODIFIED="1656396231965" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_tan.coverage" NAME="pytest for test_elementwise.test_tan Coverage Results" MODIFIED="1655717518898" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_image_test_linear_resample.coverage" NAME="pytest for test_image.test_linear_resample Coverage Results" MODIFIED="1656401079523" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest__1_.coverage" NAME="pytest (1) Coverage Results" MODIFIED="1656402738621" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_sorting_test_argsort.coverage" NAME="pytest for test_sorting.test_argsort Coverage Results" MODIFIED="1656406643087" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_isfinite.coverage" NAME="pytest for test_elementwise.test_isfinite Coverage Results" MODIFIED="1655712596400" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_positive.coverage" NAME="pytest for test_elementwise.test_positive Coverage Results" MODIFIED="1655714748958" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_floor.coverage" NAME="pytest for test_elementwise.test_floor Coverage Results" MODIFIED="1655713622818" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_isnan.coverage" NAME="pytest for test_elementwise.test_isnan Coverage Results" MODIFIED="1655714029477" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_acos.coverage" NAME="pytest for test_elementwise.test_acos Coverage Results" MODIFIED="1655714217698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_device_test_as_native_dev.coverage" NAME="pytest for test_device.test_as_native_dev Coverage Results" MODIFIED="1655097400260" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_sign.coverage" NAME="pytest for test_elementwise.test_sign Coverage Results" MODIFIED="1655713733308" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$image.coverage" NAME="image Coverage Results" MODIFIED="1656401003687" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_trunc.coverage" NAME="pytest for test_elementwise.test_trunc Coverage Results" MODIFIED="1655717358859" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$test_random.coverage" NAME="test_random Coverage Results" MODIFIED="1656930353847" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy_tests/test_ivy/test_functional/test_core" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_set_test_unique_values.coverage" NAME="pytest for test_set.test_unique_values Coverage Results" MODIFIED="1656405612601" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_erf.coverage" NAME="pytest for test_elementwise.test_erf Coverage Results" MODIFIED="1655717922359" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_set_framework.coverage" NAME="pytest for test_general.test_set_framework Coverage Results" MODIFIED="1656302998868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_shape.coverage" NAME="pytest for test_general.test_shape Coverage Results" MODIFIED="1656399148011" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_expand_dims.coverage" NAME="pytest for test_manipulation.test_expand_dims Coverage Results" MODIFIED="1656403187883" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_logaddexp.coverage" NAME="pytest for test_elementwise.test_logaddexp Coverage Results" MODIFIED="1655717492418" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_permute_dims.coverage" NAME="pytest for test_manipulation.test_permute_dims Coverage Results" MODIFIED="1656403295734" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_isinf.coverage" NAME="pytest for test_elementwise.test_isinf Coverage Results" MODIFIED="1655712601488" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_multinomial.coverage" NAME="pytest for test_random.test_multinomial Coverage Results" MODIFIED="1657263121380" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_less_equal.coverage" NAME="pytest for test_elementwise.test_less_equal Coverage Results" MODIFIED="1655712643800" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_to_scalar.coverage" NAME="pytest for test_general.test_to_scalar Coverage Results" MODIFIED="1656398440967" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_image_test_stack_images.coverage" NAME="pytest for test_image.test_stack_images Coverage Results" MODIFIED="1656399396351" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_subtract.coverage" NAME="pytest for test_elementwise.test_subtract Coverage Results" MODIFIED="1655717667719" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_and.coverage" NAME="pytest for test_elementwise.test_bitwise_and Coverage Results" MODIFIED="1655712665298" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_log.coverage" NAME="pytest for test_elementwise.test_log Coverage Results" MODIFIED="1655717624718" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_array_api_tests_test_manipulation_functions_test_concat.coverage" NAME="pytest for array_api_tests.test_manipulation_functions.test_concat Coverage Results" MODIFIED="1655097439945" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_sin.coverage" NAME="pytest for test_elementwise.test_sin Coverage Results" MODIFIED="1656051774816" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_cos.coverage" NAME="pytest for test_elementwise.test_cos Coverage Results" MODIFIED="1655714195781" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$elementwise.coverage" NAME="elementwise Coverage Results" MODIFIED="1655718805118" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_greater_equal.coverage" NAME="pytest for test_elementwise.test_greater_equal Coverage Results" MODIFIED="1655714373840" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_creation_test_array.coverage" NAME="pytest for test_creation.test_array Coverage Results" MODIFIED="1656396110507" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$elementwise__tensorflow_.coverage" NAME="elementwise (tensorflow) Coverage Results" MODIFIED="1655446705227" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_sqrt.coverage" NAME="pytest for test_elementwise.test_sqrt Coverage Results" MODIFIED="1655713798398" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_minimum.coverage" NAME="pytest for test_elementwise.test_minimum Coverage Results" MODIFIED="1655717969338" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_asinh.coverage" NAME="pytest for test_elementwise.test_asinh Coverage Results" MODIFIED="1655714530808" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_creation_test_ones_like.coverage" NAME="pytest for test_creation.test_ones_like Coverage Results" MODIFIED="1656396343904" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_maximum.coverage" NAME="pytest for test_elementwise.test_maximum Coverage Results" MODIFIED="1655718045208" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_set_test_unique_all.coverage" NAME="pytest for test_set.test_unique_all Coverage Results" MODIFIED="1656405677243" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_zero_pad.coverage" NAME="pytest for test_manipulation.test_zero_pad Coverage Results" MODIFIED="1656403764811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest.coverage" NAME="pytest Coverage Results" MODIFIED="1656402701539" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_random_uniform.coverage" NAME="pytest for test_random.test_random_uniform Coverage Results" MODIFIED="1658290690928" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_divide.coverage" NAME="pytest for test_elementwise.test_divide Coverage Results" MODIFIED="1655714345797" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_floor_divide.coverage" NAME="pytest for test_elementwise.test_floor_divide Coverage Results" MODIFIED="1655714719095" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$manipulation.coverage" NAME="manipulation Coverage Results" MODIFIED="1654595458073" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_sinh.coverage" NAME="pytest for test_elementwise.test_sinh Coverage Results" MODIFIED="1655714489539" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_equal.coverage" NAME="pytest for test_elementwise.test_equal Coverage Results" MODIFIED="1655712625958" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_device_test_dev.coverage" NAME="pytest for test_device.test_dev Coverage Results" MODIFIED="1656396682887" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$random.coverage" NAME="random Coverage Results" MODIFIED="1656919207490" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_random_normal.coverage" NAME="pytest for test_random.test_random_normal Coverage Results" MODIFIED="1658132287030" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_dtype_test_is_int_dtype.coverage" NAME="pytest for test_dtype.test_is_int_dtype Coverage Results" MODIFIED="1656397454083" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_log10.coverage" NAME="pytest for test_elementwise.test_log10 Coverage Results" MODIFIED="1655713926639" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_swapaxes.coverage" NAME="pytest for test_manipulation.test_swapaxes Coverage Results" MODIFIED="1656403843444" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_square.coverage" NAME="pytest for test_elementwise.test_square Coverage Results" MODIFIED="1655714759149" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_tanh.coverage" NAME="pytest for test_elementwise.test_tanh Coverage Results" MODIFIED="1655714705318" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_greater.coverage" NAME="pytest for test_elementwise.test_greater Coverage Results" MODIFIED="1655714359528" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_image_test_float_img_to_uint8_img.coverage" NAME="pytest for test_image.test_float_img_to_uint8_img Coverage Results" MODIFIED="1656400347078" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_creation_test_zeros_like.coverage" NAME="pytest for test_creation.test_zeros_like Coverage Results" MODIFIED="1656396379444" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_right_shift.coverage" NAME="pytest for test_elementwise.test_bitwise_right_shift Coverage Results" MODIFIED="1655717796619" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_copy_array.coverage" NAME="pytest for test_general.test_copy_array Coverage Results" MODIFIED="1656397616694" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_roll.coverage" NAME="pytest for test_manipulation.test_roll Coverage Results" MODIFIED="1656403385183" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$.coverage" NAME=" Coverage Results" MODIFIED="1655283500329" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/ivy$Doctests_in_random.coverage" NAME="Doctests in random Coverage Results" MODIFIED="1654596132336" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$Doctests_in_data_type.coverage" NAME="Doctests in data_type Coverage Results" MODIFIED="1655447050952" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$Doctest_astype.coverage" NAME="Doctest astype Coverage Results" MODIFIED="1654501922243" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_logical_xor.coverage" NAME="pytest for test_elementwise.test_logical_xor Coverage Results" MODIFIED="1655714390988" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_atanh.coverage" NAME="pytest for test_elementwise.test_atanh Coverage Results" MODIFIED="1655717754718" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_negative.coverage" NAME="pytest for test_elementwise.test_negative Coverage Results" MODIFIED="1655718310368" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$elementwise__torch_.coverage" NAME="elementwise (torch) Coverage Results" MODIFIED="1655446645836" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_sorting_test_sort.coverage" NAME="pytest for test_sorting.test_sort Coverage Results" MODIFIED="1656406596722" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_ceil.coverage" NAME="pytest for test_elementwise.test_ceil Coverage Results" MODIFIED="1655712745571" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_logical_not.coverage" NAME="pytest for test_elementwise.test_logical_not Coverage Results" MODIFIED="1655714331968" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_exp.coverage" NAME="pytest for test_elementwise.test_exp Coverage Results" MODIFIED="1655717657259" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_logical_or.coverage" NAME="pytest for test_elementwise.test_logical_or Coverage Results" MODIFIED="1655714414018" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_add.coverage" NAME="pytest for test_elementwise.test_add Coverage Results" MODIFIED="1655712021758" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_cosh.coverage" NAME="pytest for test_elementwise.test_cosh Coverage Results" MODIFIED="1655714295377" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_tile.coverage" NAME="pytest for test_manipulation.test_tile Coverage Results" MODIFIED="1656403651858" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$data_type.coverage" NAME="data_type Coverage Results" MODIFIED="1656658371141" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_image_test_gradient_image.coverage" NAME="pytest for test_image.test_gradient_image Coverage Results" MODIFIED="1656401453357" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_reshape.coverage" NAME="pytest for test_manipulation.test_reshape Coverage Results" MODIFIED="1656403330342" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_flip.coverage" NAME="pytest for test_manipulation.test_flip Coverage Results" MODIFIED="1656403242710" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_seed.coverage" NAME="pytest for test_random.test_seed Coverage Results" MODIFIED="1657262970018" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_logical_and.coverage" NAME="pytest for test_elementwise.test_logical_and Coverage Results" MODIFIED="1655714402097" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_left_shift.coverage" NAME="pytest for test_elementwise.test_bitwise_left_shift Coverage Results" MODIFIED="1655717800968" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$elementwise__2_.coverage" NAME="elementwise (2) Coverage Results" MODIFIED="1655769774119" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_repeat.coverage" NAME="pytest for test_manipulation.test_repeat Coverage Results" MODIFIED="1656403612625" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_dtype_test_is_float_dtype.coverage" NAME="pytest for test_dtype.test_is_float_dtype Coverage Results" MODIFIED="1656397175679" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_less.coverage" NAME="pytest for test_elementwise.test_less Coverage Results" MODIFIED="1655714137418" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_stack.coverage" NAME="pytest for test_manipulation.test_stack Coverage Results" MODIFIED="1656403480619" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_helpers_test_array_function.coverage" NAME="pytest for helpers.test_array_function Coverage Results" MODIFIED="1654514109483" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$norms.coverage" NAME="norms Coverage Results" MODIFIED="1656658326889" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy/functional/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_squeeze.coverage" NAME="pytest for test_manipulation.test_squeeze Coverage Results" MODIFIED="1656403435811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_arrays_equal.coverage" NAME="pytest for test_general.test_arrays_equal Coverage Results" MODIFIED="1656397895144" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_set_test_unique_counts.coverage" NAME="pytest for test_set.test_unique_counts Coverage Results" MODIFIED="1656405532264" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_atan.coverage" NAME="pytest for test_elementwise.test_atan Coverage Results" MODIFIED="1656302933179" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_shuffle.coverage" NAME="pytest for test_random.test_shuffle Coverage Results" MODIFIED="1657263002013" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_invert.coverage" NAME="pytest for test_elementwise.test_bitwise_invert Coverage Results" MODIFIED="1655712537048" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_not_equal.coverage" NAME="pytest for test_elementwise.test_not_equal Coverage Results" MODIFIED="1655714652998" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_atan2.coverage" NAME="pytest for test_elementwise.test_atan2 Coverage Results" MODIFIED="1656052008402" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_xor.coverage" NAME="pytest for test_elementwise.test_bitwise_xor Coverage Results" MODIFIED="1655712296037" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$elementwise__1_.coverage" NAME="elementwise (1) Coverage Results" MODIFIED="1655718839138" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_random_test_randint.coverage" NAME="pytest for test_random.test_randint Coverage Results" MODIFIED="1657262630159" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_remainder.coverage" NAME="pytest for test_elementwise.test_remainder Coverage Results" MODIFIED="1655717696058" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_image_test_bilinear_resample.coverage" NAME="pytest for test_image.test_bilinear_resample Coverage Results" MODIFIED="1656401301136" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_pow.coverage" NAME="pytest for test_elementwise.test_pow Coverage Results" MODIFIED="1655716708499" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$activations.coverage" NAME="activations Coverage Results" MODIFIED="1654508461238" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_manipulation_test_constant_pad.coverage" NAME="pytest for test_manipulation.test_constant_pad Coverage Results" MODIFIED="1656403689467" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_set_test_unique_inverse.coverage" NAME="pytest for test_set.test_unique_inverse Coverage Results" MODIFIED="1656405508220" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_acosh.coverage" NAME="pytest for test_elementwise.test_acosh Coverage Results" MODIFIED="1656302900077" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_expm1.coverage" NAME="pytest for test_elementwise.test_expm1 Coverage Results" MODIFIED="1655769698759" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_bitwise_or.coverage" NAME="pytest for test_elementwise.test_bitwise_or Coverage Results" MODIFIED="1655714735838" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_to_numpy.coverage" NAME="pytest for test_general.test_to_numpy Coverage Results" MODIFIED="1656398763545" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_multiply.coverage" NAME="pytest for test_elementwise.test_multiply Coverage Results" MODIFIED="1655714146619" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_asin.coverage" NAME="pytest for test_elementwise.test_asin Coverage Results" MODIFIED="1655713662698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_general_test_array_equal.coverage" NAME="pytest for test_general.test_array_equal Coverage Results" MODIFIED="1656397716998" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_round.coverage" NAME="pytest for test_elementwise.test_round Coverage Results" MODIFIED="1655716997388" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_in_helpers_py.coverage" NAME="pytest in helpers.py Coverage Results" MODIFIED="1655090782918" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
    <SUITE FILE_PATH="coverage/ivy$pytest_for_test_elementwise_test_abs.coverage" NAME="pytest for test_elementwise.test_abs Coverage Results" MODIFIED="1655717436678" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/ivy" />
  </component>
</project>