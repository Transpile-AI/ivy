# Workflow to run all the tests for the ivy frontends and functional api,
# and update the remote database with the results

name: update-test-dashboard
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
permissions:
  actions: read
jobs:
  update-frontends-torch:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        submodule : [ blas_and_lapack_ops ]
        backend : [ jax, numpy, tensorflow, torch ]
    steps:
      - name: Checkout üõéÔ∏èIvy
        uses: actions/checkout@v3
        with:
          path: ivy
          persist-credentials: false

      - name: Get job URL
        id: get_job_url
        run: |
          JOB_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
          | jq -r '.jobs[] | select(.name=="build (submodule=${{ matrix.submodule }}, backend=${{ matrix.backend }})") | .id')
          JOB_URL="https://github.com/${{ github.repository }}/runs/$JOB_ID"
          echo "Job URL: $JOB_URL"
          echo "::set-output name=url::$JOB_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ivy
        run: |
          cd ivy
          sudo pip3 install -e .

      - name: Run Tests
        id: tests
        run: |
          cd ivy
          pip3 install pymongo
          pip3 install pytest-json-report
          echo "html_url: ${{ steps.get_job_url.outputs.url }}"
          docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_torch_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-torch-nn-functional:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ convolution_functions, distance_functions, dropout_functions, layer_functions,
#                         linear_functions, loss_functions, non_linear_activation_functions, norms,
#                         pooling_functions, sparse_functions, vision_functions ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_torch_nn_functional_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-tensorflow:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ __operators__, dtypes, func_wrapper, general_functions, linalg, math, nest, nn,
#                         random, raw_ops, signal, tensor, tensorarray, tensorshape ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_tensorflow_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-tensorflow-keras:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ activations, backend ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_tensorflow_keras_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-jax:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ array, func_wrapper, general_functions, random ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_jax_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-jax-lax:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ control_flow_operators, custom_gradient_operators, linalg, operators ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_jax_lax_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-jax-nn:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ non_linear_activations ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_jax_nn_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-jax-numpy:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ creation, dtype, fft, indexing, linalg, logic, manipulations,
#                         mathematical_functions, searching_sorting, statistical ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_jax_numpy_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-frontends-numpy:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ broadcast, data_type_routines, fft, indexing_routines, linalg, logic, manipulation_routines,
#                         mathematical_functions, matrix, ndarray, random, sorting_searching_counting, statistics, ufunc ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_numpy_frontends.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-ivy-core:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ creation, device, dtype, elementwise, general, gradients, linalg, manipulation, meta,
#                         nest, random, searching, set, sorting, statistical, utility ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_ivy_core.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-ivy-experimental-core:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ creation, elementwise, general, gradients, linalg, manipulation,
#                         random, searching, sorting, sparse_array, statistical, utility ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_ivy_experimental_core.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-ivy-experimental-nn:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ activations, layers, losses, norms ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_ivy_experimental_nn.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}

#   update-ivy-nn:
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           submodule : [ activations, layers, losses, norms ]
#           backend : [ jax, numpy, tensorflow, torch ]
#     steps:
#       - name: Checkout üõéÔ∏èIvy
#         uses: actions/checkout@v3
#         with:
#           path: ivy
#           persist-credentials: false

#       - name: Get Job URL
#         uses: Tiryoh/gha-jobid-action@v0
#         id: jobs
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           job_name: ${{ github.job }}

#       - name: Install ivy
#         run: |
#           cd ivy
#           sudo pip3 install -e .

#       - name: Run Tests
#         id: tests
#         run: |
#           cd ivy
#           pip3 install pymongo
#           pip3 install pytest-json-report
#           docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis unifyai/ivy:latest scripts/update_test_dashboard/update_ivy_nn.sh ${{ matrix.submodule }} ${{ matrix.backend }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.IVY_DASHBOARD_DB_KEY }}
