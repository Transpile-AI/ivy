# uses the base image which has cuda and cudnn installed(multiple versions) and then installs the
# latest frameworks and the requirements
FROM unifyai/multicuda:base
WORKDIR /ivy
ARG fw
COPY /docker/multicuda_framework_directory.py .
COPY /docker/multicuda_requirements.txt .


ARG pycon=3.8.10

ENV DEBIAN_FRONTEND=noninteractive

# Install miniconda
ENV CONDA_DIR /opt/miniconda/

RUN apt clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get update && \
    apt-get install -y wget && \
    apt-get install git -y && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
     /bin/bash ~/miniconda.sh -b -p /opt/miniconda


ENV PATH=$CONDA_DIR/bin:$PATH
RUN conda create --name multienv python==$pycon

# to fix protobuf conflicts
ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION python
ENV PATH=/opt/miniconda/envs/multienv/bin:$PATH
RUN apt-get update && \
    apt-get install -y python3-pip python3-tk && \
    apt-get install -y libsm6 libxext6 libxrender-dev libgl1-mesa-glx && \
    apt-get install -y git && \
    apt-get install -y rsync && \
    apt-get install -y libusb-1.0-0 && \
    apt-get install -y libglib2.0-0 && \
    pip3 install --upgrade pip && \
    pip3 install setuptools==58.5.3


RUN pip3 install --upgrade pip && \
    pip3 install --upgrade pip-autoremove && \
    pip3 install --upgrade --no-cache-dir -r multicuda_requirements.txt && \
    pip uninstall torch -y &&\
    pip uninstall tensorflow -y &&\
    pip uninstall jax -y &&\
    pip uninstall jaxlib -y &&\
    python3 multicuda_framework_directory.py $fw

