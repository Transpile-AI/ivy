################################ Array-API repo skips ################################

# copy not implemented
ivy_tests/test_array_api/array_api_tests/test_creation_functions.py::test_asarray_arrays

# https://github.com/numpy/numpy/issues/20870
ivy_tests/test_array_api/array_api_tests/test_data_type_functions.py::test_can_cast

# waiting on NumPy to allow/revert distinct NaNs for np.unique
# https://github.com/numpy/numpy/issues/20326#issuecomment-1012380448
ivy_tests/test_array_api/array_api_tests/test_set_functions.py

# https://github.com/numpy/numpy/issues/21373
ivy_tests/test_array_api/array_api_tests/test_array_object.py::test_getitem

# missing copy arg
ivy_tests/test_array_api/array_api_tests/test_signatures.py::test_func_signature[reshape]

# https://github.com/numpy/numpy/issues/21211
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__iadd__(x1_i is -0 and x2_i is -0) -> -0]

# https://github.com/numpy/numpy/issues/21213
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -infinity and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -0 and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +0]

############################# Ivy only skips - torch #############################

# Test is sending unsupported torch dtypes
ivy_tests/test_array_api/array_api_tests/test_statistical_functions.py::test_prod
ivy_tests/test_array_api/array_api_tests/test_statistical_functions.py::test_sum

### Failing for other reasons ###

# output differs from expected
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[add(isfinite(x1_i) and x1_i != 0 and x2_i == -x1_i) -> +0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[__add__(isfinite(x1_i) and x1_i != 0 and x2_i == -x1_i) -> +0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[pow(x1_i is -infinity and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -infinity]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[pow(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i is -infinity and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -infinity]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i is +0 and x2_i < 0) -> -0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__iadd__(isfinite(x1_i) and x1_i != 0 and x2_i == -x1_i) -> +0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -infinity and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -infinity]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
ivy_tests/test_array_api/array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i is +0 and x2_i < 0) -> -0]

# with raises(AssertionError):
# ph.assert_array_elements("mixed sign zeros", xp.asarray(0.0), xp.asarray(-0.0))
# Failed: DID NOT RAISE <class 'AssertionError'>
ivy_tests/test_array_api/array_api_tests/meta/test_pytest_helpers.py::test_assert_array_elements

# issue with asarray
ivy_tests/test_array_api/array_api_tests/meta/test_utils.py::test_int_to_dtype

# AttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute '__setitem__'
ivy_tests/test_array_api/array_api_tests/test_array_object.py::test_setitem
ivy_tests/test_array_api/array_api_tests/test_array_object.py::test_setitem_masking

# ValueError: mask cannot be scalar
ivy_tests/test_array_api/array_api_tests/test_array_object.py::test_getitem_masking

############################# Ivy only skips - values error #############################

# Issues with backend implementation. Straightforward floordiv implementation deviates from standard,
# as noted by the skip in the array-api repo.
ivy_tests/test_array_api/array_api_tests/test_operators_and_elementwise_functions.py::test_floor_divide
